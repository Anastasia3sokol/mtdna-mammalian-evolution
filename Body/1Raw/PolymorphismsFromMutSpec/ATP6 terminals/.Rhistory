rm(list=ls(all=TRUE))
List = list.files("../../Body/1Raw/PolymorphismsFromMutSpec/ATP6 terminals/", pattern=".*\\.terminals.nuc.fa")
setwd("../../Body/1Raw/PolymorphismsFromMutSpec/ATP6 terminals/")
Final=data.frame('Gene','Species','FirstName','SecondName','SubstVec')
file = "Mus_musculus_castaneus.ATP6.terminals.nuc.fa"
Sp <- read.table(file, header = FALSE)
Species=unlist(strsplit(file,'\\.'))[1]
Gene=unlist(strsplit(file,'\\.'))[2]
Odd = seq(2,nrow(Sp),2)
NonOdd = seq(1,nrow(Sp),2)
SpSeq=data.frame(Sp[Odd,])
SpName=data.frame(Sp[NonOdd,])
Sp=cbind(SpName,SpSeq); names(Sp)=c('Name','Seq')
Sp$Name=gsub('>','',Sp$Name); Sp=Sp[Sp$Name != 'OUTGRP',]
if (nrow(Sp)>=5)
{
Sp=Sp[sample(seq(1,nrow(Sp),1),5),]
{
for (i in 1:(nrow(Sp)-1))
{ # i = 1
FirstName = Sp$Name[i]
FirstSeq = as.character(Sp$Seq[i])
FirstSeq = unlist(strsplit(FirstSeq,''))
for (j in (i+1):(nrow(Sp)))
{ # j = 2
SecondName = Sp$Name[j]
SecondSeq = as.character(Sp$Seq[j])
SecondSeq = unlist(strsplit(SecondSeq,''))
SubstVec=''
for (codon in 1:(length(FirstSeq)/3)) # should be divided by 3 without the rest
{ # codon=1
FirstCodon = paste(FirstSeq[codon*3-2],FirstSeq[codon*3-1],FirstSeq[codon*3],sep='')
SecondCodon = paste(SecondSeq[codon*3-2],SecondSeq[codon*3-1],SecondSeq[codon*3],sep='')
if (FirstCodon != SecondCodon) {SubstVec = paste(SubstVec,codon,':',FirstCodon,'>',SecondCodon,';',sep='')}
}
OneLine=data.frame(Gene,Species,FirstName,SecondName,SubstVec)
Final=rbind(Final,OneLine)
}
}
}
}
View(Final)
Final=data.frame('Gene','Species','FirstName','SecondName','SubstVec'); names(Final)=c('Gene','Species','FirstName','SecondName','SubstVec')
View(Final)
Final=Final[-1,]
View(Final)
file = "Mus_musculus_castaneus.ATP6.terminals.nuc.fa"
Sp <- read.table(file, header = FALSE)
Species=unlist(strsplit(file,'\\.'))[1]
Gene=unlist(strsplit(file,'\\.'))[2]
Odd = seq(2,nrow(Sp),2)
NonOdd = seq(1,nrow(Sp),2)
SpSeq=data.frame(Sp[Odd,])
SpName=data.frame(Sp[NonOdd,])
Sp=cbind(SpName,SpSeq); names(Sp)=c('Name','Seq')
Sp$Name=gsub('>','',Sp$Name); Sp=Sp[Sp$Name != 'OUTGRP',]
if (nrow(Sp)>=5)
{
Sp=Sp[sample(seq(1,nrow(Sp),1),5),]
{
for (i in 1:(nrow(Sp)-1))
{ # i = 1
FirstName = Sp$Name[i]
FirstSeq = as.character(Sp$Seq[i])
FirstSeq = unlist(strsplit(FirstSeq,''))
for (j in (i+1):(nrow(Sp)))
{ # j = 2
SecondName = Sp$Name[j]
SecondSeq = as.character(Sp$Seq[j])
SecondSeq = unlist(strsplit(SecondSeq,''))
SubstVec=''
for (codon in 1:(length(FirstSeq)/3)) # should be divided by 3 without the rest
{ # codon=1
FirstCodon = paste(FirstSeq[codon*3-2],FirstSeq[codon*3-1],FirstSeq[codon*3],sep='')
SecondCodon = paste(SecondSeq[codon*3-2],SecondSeq[codon*3-1],SecondSeq[codon*3],sep='')
if (FirstCodon != SecondCodon) {SubstVec = paste(SubstVec,codon,':',FirstCodon,'>',SecondCodon,';',sep='')}
}
OneLine=data.frame(Gene,Species,FirstName,SecondName,SubstVec)
Final=rbind(Final,OneLine)
}
}
}
}
View(Final)
Final=data.frame('Gene','Species','FirstName','SecondName','SubstVec'); names(Final)=c('Gene','Species','FirstName','SecondName','SubstVec')
Final=Final[-1,]
for (file in List)
{# file = "Mus_musculus_castaneus.ATP6.terminals.nuc.fa"
Sp <- read.table(file, header = FALSE)
Species=unlist(strsplit(file,'\\.'))[1]
Gene=unlist(strsplit(file,'\\.'))[2]
Odd = seq(2,nrow(Sp),2)
NonOdd = seq(1,nrow(Sp),2)
SpSeq=data.frame(Sp[Odd,])
SpName=data.frame(Sp[NonOdd,])
Sp=cbind(SpName,SpSeq); names(Sp)=c('Name','Seq')
Sp$Name=gsub('>','',Sp$Name); Sp=Sp[Sp$Name != 'OUTGRP',]
if (nrow(Sp)>=5)
{
Sp=Sp[sample(seq(1,nrow(Sp),1),5),]
{
for (i in 1:(nrow(Sp)-1))
{ # i = 1
FirstName = Sp$Name[i]
FirstSeq = as.character(Sp$Seq[i])
FirstSeq = unlist(strsplit(FirstSeq,''))
for (j in (i+1):(nrow(Sp)))
{ # j = 2
SecondName = Sp$Name[j]
SecondSeq = as.character(Sp$Seq[j])
SecondSeq = unlist(strsplit(SecondSeq,''))
SubstVec=''
for (codon in 1:(length(FirstSeq)/3)) # should be divided by 3 without the rest
{ # codon=1
FirstCodon = paste(FirstSeq[codon*3-2],FirstSeq[codon*3-1],FirstSeq[codon*3],sep='')
SecondCodon = paste(SecondSeq[codon*3-2],SecondSeq[codon*3-1],SecondSeq[codon*3],sep='')
if (FirstCodon != SecondCodon) {SubstVec = paste(SubstVec,codon,':',FirstCodon,'>',SecondCodon,';',sep='')}
}
OneLine=data.frame(Gene,Species,FirstName,SecondName,SubstVec)
Final=rbind(Final,OneLine)
}
}
}
}
}
View(Final)
length(unique(Final$Species))
Final=data.frame('Gene','Species','FirstName','SecondName','SubstVec'); names(Final)=c('Gene','Species','FirstName','SecondName','SubstVec')
Final=Final[-1,]
for (file in List)
{# file = "Mus_musculus_castaneus.ATP6.terminals.nuc.fa"
Sp <- read.table(file, header = FALSE)
Species=unlist(strsplit(file,'\\.'))[1]
Gene=unlist(strsplit(file,'\\.'))[2]
Odd = seq(2,nrow(Sp),2)
NonOdd = seq(1,nrow(Sp),2)
SpSeq=data.frame(Sp[Odd,])
SpName=data.frame(Sp[NonOdd,])
Sp=cbind(SpName,SpSeq); names(Sp)=c('Name','Seq')
Sp$Name=gsub('>','',Sp$Name); Sp=Sp[Sp$Name != 'OUTGRP',]
if (nrow(Sp)>=10)
{
Sp=Sp[sample(seq(1,nrow(Sp),1),10),]
{
for (i in 1:(nrow(Sp)-1))
{ # i = 1
FirstName = Sp$Name[i]
FirstSeq = as.character(Sp$Seq[i])
FirstSeq = unlist(strsplit(FirstSeq,''))
for (j in (i+1):(nrow(Sp)))
{ # j = 2
SecondName = Sp$Name[j]
SecondSeq = as.character(Sp$Seq[j])
SecondSeq = unlist(strsplit(SecondSeq,''))
SubstVec=''
for (codon in 1:(length(FirstSeq)/3)) # should be divided by 3 without the rest
{ # codon=1
FirstCodon = paste(FirstSeq[codon*3-2],FirstSeq[codon*3-1],FirstSeq[codon*3],sep='')
SecondCodon = paste(SecondSeq[codon*3-2],SecondSeq[codon*3-1],SecondSeq[codon*3],sep='')
if (FirstCodon != SecondCodon) {SubstVec = paste(SubstVec,codon,':',FirstCodon,'>',SecondCodon,';',sep='')}
}
OneLine=data.frame(Gene,Species,FirstName,SecondName,SubstVec)
Final=rbind(Final,OneLine)
}
}
}
}
}
length(unique(Final$Species)) # 314 if 5
rm(list=ls(all=TRUE))
wd <- getwd()
wd
